{"ast":null,"code":"import Parse from \"parse/dist/parse.min.js\"; // used in auth register component\n\nexport var createUser = function createUser(newUser) {\n  var user = new Parse.User();\n  user.set(\"username\", newUser.email);\n  user.set(\"firstName\", newUser.firstName);\n  user.set(\"lastName\", newUser.lastName);\n  user.set(\"password\", newUser.password);\n  user.set(\"email\", newUser.email);\n  console.log(\"User: \", user);\n  return user.signUp().then(function (newUserSaved) {\n    return newUserSaved;\n  }).catch(function (error) {\n    alert(\"Error: \".concat(error.message));\n  });\n};","map":{"version":3,"sources":["/Users/coltoncrum/Downloads/final/src/Components/Auth/AuthService.js"],"names":["Parse","createUser","newUser","user","User","set","email","firstName","lastName","password","console","log","signUp","then","newUserSaved","catch","error","alert","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,yBAAlB,C,CAEA;;AACA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAa;AACrC,MAAMC,IAAI,GAAG,IAAIH,KAAK,CAACI,IAAV,EAAb;AAEAD,EAAAA,IAAI,CAACE,GAAL,CAAS,UAAT,EAAqBH,OAAO,CAACI,KAA7B;AACAH,EAAAA,IAAI,CAACE,GAAL,CAAS,WAAT,EAAsBH,OAAO,CAACK,SAA9B;AACAJ,EAAAA,IAAI,CAACE,GAAL,CAAS,UAAT,EAAqBH,OAAO,CAACM,QAA7B;AACAL,EAAAA,IAAI,CAACE,GAAL,CAAS,UAAT,EAAqBH,OAAO,CAACO,QAA7B;AACAN,EAAAA,IAAI,CAACE,GAAL,CAAS,OAAT,EAAkBH,OAAO,CAACI,KAA1B;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBR,IAAtB;AACA,SAAOA,IAAI,CACRS,MADI,GAEJC,IAFI,CAEC,UAACC,YAAD,EAAkB;AACtB,WAAOA,YAAP;AACD,GAJI,EAKJC,KALI,CAKE,UAACC,KAAD,EAAW;AAChBC,IAAAA,KAAK,kBAAWD,KAAK,CAACE,OAAjB,EAAL;AACD,GAPI,CAAP;AAQD,CAlBM","sourcesContent":["import Parse from \"parse/dist/parse.min.js\";\n\n// used in auth register component\nexport const createUser = (newUser) => {\n  const user = new Parse.User();\n\n  user.set(\"username\", newUser.email);\n  user.set(\"firstName\", newUser.firstName);\n  user.set(\"lastName\", newUser.lastName);\n  user.set(\"password\", newUser.password);\n  user.set(\"email\", newUser.email);\n\n  console.log(\"User: \", user);\n  return user\n    .signUp()\n    .then((newUserSaved) => {\n      return newUserSaved;\n    })\n    .catch((error) => {\n      alert(`Error: ${error.message}`);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}