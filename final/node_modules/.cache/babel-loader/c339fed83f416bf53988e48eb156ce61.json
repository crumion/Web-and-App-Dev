{"ast":null,"code":"import Parse from \"parse/dist/parse.min.js\"; // used in auth register component\n\nexport var checkUser = function checkUser(newUser) {\n  var user = new Parse.User();\n  user.set(\"username\", newUser.email);\n  user.set(\"password\", newUser.password);\n  return user.logIn().then(function (newLoginSuccess) {\n    sessionStorage.setItem(\"isAuth\", user.authenticated());\n    var flag = window.sessionStorage.getItem(\"isAuth\");\n    return newLoginSuccess;\n  }).catch(function (error) {\n    alert(\"Error: \".concat(error.message));\n    sessionStorage.setItem(\"isAuth\", user.authenticated());\n    var flag = window.sessionStorage.getItem(\"isAuth\");\n  });\n};","map":{"version":3,"sources":["/Users/coltoncrum/Downloads/final/src/Components/Auth/LogService.js"],"names":["Parse","checkUser","newUser","user","User","set","email","password","logIn","then","newLoginSuccess","sessionStorage","setItem","authenticated","flag","window","getItem","catch","error","alert","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,yBAAlB,C,CAEA;;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAa;AACpC,MAAMC,IAAI,GAAG,IAAIH,KAAK,CAACI,IAAV,EAAb;AAEAD,EAAAA,IAAI,CAACE,GAAL,CAAS,UAAT,EAAqBH,OAAO,CAACI,KAA7B;AACAH,EAAAA,IAAI,CAACE,GAAL,CAAS,UAAT,EAAqBH,OAAO,CAACK,QAA7B;AAEA,SAAOJ,IAAI,CACRK,KADI,GAEJC,IAFI,CAEC,UAACC,eAAD,EAAqB;AACzBC,IAAAA,cAAc,CAACC,OAAf,CAAuB,QAAvB,EAAiCT,IAAI,CAACU,aAAL,EAAjC;AACA,QAAIC,IAAI,GAAGC,MAAM,CAACJ,cAAP,CAAsBK,OAAtB,CAA8B,QAA9B,CAAX;AAEA,WAAON,eAAP;AACD,GAPI,EAQJO,KARI,CAQE,UAACC,KAAD,EAAW;AAChBC,IAAAA,KAAK,kBAAWD,KAAK,CAACE,OAAjB,EAAL;AACAT,IAAAA,cAAc,CAACC,OAAf,CAAuB,QAAvB,EAAiCT,IAAI,CAACU,aAAL,EAAjC;AACA,QAAIC,IAAI,GAAGC,MAAM,CAACJ,cAAP,CAAsBK,OAAtB,CAA8B,QAA9B,CAAX;AACD,GAZI,CAAP;AAaD,CAnBM","sourcesContent":["import Parse from \"parse/dist/parse.min.js\";\n\n// used in auth register component\nexport const checkUser = (newUser) => {\n  const user = new Parse.User();\n\n  user.set(\"username\", newUser.email);\n  user.set(\"password\", newUser.password);\n\n  return user\n    .logIn()\n    .then((newLoginSuccess) => {\n      sessionStorage.setItem(\"isAuth\", user.authenticated());\n      var flag = window.sessionStorage.getItem(\"isAuth\");\n\n      return newLoginSuccess;\n    })\n    .catch((error) => {\n      alert(`Error: ${error.message}`);\n      sessionStorage.setItem(\"isAuth\", user.authenticated());\n      var flag = window.sessionStorage.getItem(\"isAuth\");\n    });\n};\n"]},"metadata":{},"sourceType":"module"}