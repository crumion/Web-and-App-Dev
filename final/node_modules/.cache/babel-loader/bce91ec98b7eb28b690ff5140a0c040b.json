{"ast":null,"code":"import _regeneratorRuntime from \"/Users/coltoncrum/Downloads/final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _createForOfIteratorHelper from \"/Users/coltoncrum/Downloads/final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _asyncToGenerator from \"/Users/coltoncrum/Downloads/final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/coltoncrum/Downloads/final/src/Components/Main/Feed.js\",\n    _this = this;\n\nimport Parse from \"parse/dist/parse.min.js\";\nimport Navigation from \"../../Navigation.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Feed = function Feed() {\n  // State variables\n  // asynchronous read function, queries to pull in every entry in the product class and display all of them at once. TODO in future version: make this the home page, make it display without having to hit the Read button\n  function read() {\n    return _read.apply(this, arguments);\n  }\n\n  function _read() {\n    _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var query, results, _iterator, _step, object, postedBy, winningTeam, losingTeam, oppoBet, objectId;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              document.getElementById(\"All\").innerHTML = \"\";\n              query = new Parse.Query(\"Bets\");\n              _context.prev = 2;\n              _context.next = 5;\n              return query.find();\n\n            case 5:\n              results = _context.sent;\n              _iterator = _createForOfIteratorHelper(results);\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  object = _step.value;\n                  // Access the Parse Object attributes using the .GET method\n                  postedBy = object.get(\"postedBy\");\n                  winningTeam = object.get(\"winningTeam\").toUpperCase();\n                  losingTeam = object.get(\"losingTeam\").toUpperCase();\n                  oppoBet = object.get(\"oppoBet\");\n                  objectId = object.id;\n                  console.log(postedBy);\n                  document.getElementById(\"All\").innerHTML += \"<p> @\" + postedBy + \"</p><p> has \" + winningTeam + \" winning\" + \" vs \" + losingTeam + \"</p><p> Bet Amount: $\" + oppoBet + \"</p><p> Bet Reference Number: \" + objectId + \"</p><br/>\";\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              console.error(\"Error while fetching Bet - \", _context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 10]]);\n    }));\n    return _read.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Betty | Bet Feed \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: read,\n      children: \"Read\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Fields\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, _this);\n};\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/coltoncrum/Downloads/final/src/Components/Main/Feed.js"],"names":["Parse","Navigation","Feed","read","document","getElementById","innerHTML","query","Query","find","results","object","postedBy","get","winningTeam","toUpperCase","losingTeam","oppoBet","objectId","id","console","log","error"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AACA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACxB;AAEA;AAHwB,WAITC,IAJS;AAAA;AAAA;;AAAA;AAAA,qEAIxB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACEC,cAAAA,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BC,SAA/B,GAA2C,EAA3C;AACMC,cAAAA,KAFR,GAEgB,IAAIP,KAAK,CAACQ,KAAV,CAAgB,MAAhB,CAFhB;AAAA;AAAA;AAAA,qBAI0BD,KAAK,CAACE,IAAN,EAJ1B;;AAAA;AAIUC,cAAAA,OAJV;AAAA,qDAKyBA,OALzB;;AAAA;AAKI,oEAA8B;AAAnBC,kBAAAA,MAAmB;AAC5B;AACMC,kBAAAA,QAFsB,GAEXD,MAAM,CAACE,GAAP,CAAW,UAAX,CAFW;AAGtBC,kBAAAA,WAHsB,GAGRH,MAAM,CAACE,GAAP,CAAW,aAAX,EAA0BE,WAA1B,EAHQ;AAItBC,kBAAAA,UAJsB,GAITL,MAAM,CAACE,GAAP,CAAW,YAAX,EAAyBE,WAAzB,EAJS;AAKtBE,kBAAAA,OALsB,GAKZN,MAAM,CAACE,GAAP,CAAW,SAAX,CALY;AAMtBK,kBAAAA,QANsB,GAMXP,MAAM,CAACQ,EANI;AAO5BC,kBAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACAR,kBAAAA,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BC,SAA/B,IACE,UACAM,QADA,GAEA,cAFA,GAGAE,WAHA,GAIA,UAJA,GAKA,MALA,GAMAE,UANA,GAOA,uBAPA,GAQAC,OARA,GASA,gCATA,GAUAC,QAVA,GAWA,WAZF;AAaD;AA1BL;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AA4BIE,cAAAA,OAAO,CAACE,KAAR,CAAc,6BAAd;;AA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJwB;AAAA;AAAA;;AAoCxB,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAA;AAAA;AAAA;AAAA,aAHF,eAIE;AAAQ,MAAA,OAAO,EAAEnB,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,eAKE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAG,QAAA,EAAE,EAAC;AAAN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAWD,CA/CM;KAAMD,I","sourcesContent":["import Parse from \"parse/dist/parse.min.js\";\nimport Navigation from \"../../Navigation.js\";\nexport const Feed = () => {\n  // State variables\n\n  // asynchronous read function, queries to pull in every entry in the product class and display all of them at once. TODO in future version: make this the home page, make it display without having to hit the Read button\n  async function read() {\n    document.getElementById(\"All\").innerHTML = \"\";\n    const query = new Parse.Query(\"Bets\");\n    try {\n      const results = await query.find();\n      for (const object of results) {\n        // Access the Parse Object attributes using the .GET method\n        const postedBy = object.get(\"postedBy\");\n        const winningTeam = object.get(\"winningTeam\").toUpperCase();\n        const losingTeam = object.get(\"losingTeam\").toUpperCase();\n        const oppoBet = object.get(\"oppoBet\");\n        const objectId = object.id;\n        console.log(postedBy);\n        document.getElementById(\"All\").innerHTML +=\n          \"<p> @\" +\n          postedBy +\n          \"</p><p> has \" +\n          winningTeam +\n          \" winning\" +\n          \" vs \" +\n          losingTeam +\n          \"</p><p> Bet Amount: $\" +\n          oppoBet +\n          \"</p><p> Bet Reference Number: \" +\n          objectId +\n          \"</p><br/>\";\n      }\n    } catch (error) {\n      console.error(\"Error while fetching Bet - \", error);\n    }\n  }\n\n  return (\n    <div>\n      <h1>Betty | Bet Feed </h1>\n      <Navigation />\n      <br />\n      <button onClick={read}>Read</button>\n      <div className=\"Fields\">\n        <p id=\"All\"></p>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}